// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  username  String   @unique
  password  String

  products Product[] //generated by terminal through command: npx prisma format
}

//users can have products
model Product {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  name      String   @db.VarChar(255)

  belongsToId String //one to many relationship with the user
  belongsTo   User     @relation(fields: [belongsToId], references: [id]) //set the relationship: specify the fields which holds the relation  
  updates     Update[]
}

// enum: values you would like your field to assume
enum UPDATE_STATUS {
  IN_PROGRESS
  SHIPPED
  DEPRECATED
}

//products can have updates
model Update {
  id        String        @id @default(uuid())
  createdAt DateTime      @default(now())
  updatedAt DateTime      @default(now())
  title     String
  body      String
  status    UPDATE_STATUS @default(IN_PROGRESS)
  version   String? //?: optional field
  asset     String?

  productId   String
  product     Product       @relation(fields: [productId], references: [id])
  updatePoints UpdatePoint[]
}

//Each UpdatePoint belongs to an Update
model UpdatePoint {
  id           String   @id @default(uuid())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @default(now())
  name         String   @db.VarChar(255)
  descriptionn String

  updateId String
  update   Update @relation(fields: [updateId], references: [id])
}
